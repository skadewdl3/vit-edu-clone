-- ------------------------------
-- OPTION
-- ------------------------------

OPTION IMPORT;

-- ------------------------------
-- TABLE: courses
-- ------------------------------

DEFINE TABLE courses SCHEMALESS PERMISSIONS NONE;

-- ------------------------------
-- TABLE: teachers
-- ------------------------------

DEFINE TABLE teachers SCHEMALESS PERMISSIONS NONE;

-- ------------------------------
-- TABLE: teaches
-- ------------------------------

DEFINE TABLE teaches SCHEMALESS PERMISSIONS NONE;

-- ------------------------------
-- TRANSACTION
-- ------------------------------

BEGIN TRANSACTION;

-- ------------------------------
-- TABLE DATA: courses
-- ------------------------------

UPDATE courses:ads CONTENT { assessment_scheme: ['ESE', 'CVV', 'Lab Assignment', 'Lab Exam', 'Course Project'], code: 'IT2265', credits: 5, group_discussion: NULL, home_assignment: NULL, id: courses:ads, image: 'courses/ads.jpg', name: 'Advanced Data Structures', objectives: ['Impart the basic concepts of tree data structures and algorithms.', 'Understand tree usage in different applications.', 'Construct and implement applications using Graphs.', 'Understand Hashing and its applications.', 'Emphasize the importance of Heap data structures in developing and implementing efficient algorithms.'], outcomes: ['Impart the basic concepts of tree data structures and algorithms.', 'Understand tree usage in different applications.', 'Construct and implement applications using Graphs.', 'Understand Hashing and its applications.', 'Emphasize the importance of Heap data structures in developing and implementing efficient algorithms.'], practicals: ['Assignment based on Stack Application (Expression conversion etc.)', 'Assignment based on BST operations (Create, Insert, Delete, and Traversals).', 'Assignment based on various operations on Binary Tree (Mirror image, Height, Leaf node display, Level-wise display, etc.)', 'Assignment based on AVL (insert, delete, display).', 'Assignment based on Red-black tree (insert, delete, display).', 'Assignment based on B tree (insert, delete, display).', 'Assignment based on tries (insert, delete, display).', 'Assignment based on DFS and BFS.', 'Assignment based on MST using Prim’s and Kruskal’s Algorithm.', 'Assignment based on Finding the shortest path in the given Graph.', 'Assignment based on Hashing.', 'Assignment based on Directory-based dynamic hashing.', 'Assignment based on Directory-less dynamic hashing.', 'Assignment based on Binomial heap (insert, delete, display).'], prerequisites: ['Basic Programming Skills (C/C++)'], project: NULL, projects: ['Finding Nearest Neighbors.', 'Calendar Application using File handling.', 'Path finder in Maze.', 'Word Completion Using Tire.', 'Bloom Filters.', 'Different Management Systems.', 'Scheduling Applications and Simulation.', 'Shortest Path Applications. (Kirchhoff’s Circuit, TSP with Scenario.)', 'Efficient Storage and Data Retrieval Systems.', 'Different Gaming Application.'], reference_books: ['J. Tremblay, An Introduction to Data Structures with Applications, TMH Publication, null', 'G. A.V, PAI, Data Structures and Algorithms, McGraw Hill, ISBN-13: 978-0-07-066726-6'], relevance: 'Advanced Data Structures is a course that builds on the foundational concepts of data structures and algorithms. It covers advanced topics such as graph algorithms, dynamic programming, and advanced tree structures, which are essential for developing efficient and scalable software systems.', sections: [{ hours: NULL, title: 'Trees', topics: ['Basic terminology, representation using array and linked lists.', 'Tree Traversals: Recursive and Non-recursive, Operations on binary tree: Finding Height, Leaf nodes, counting the number of Nodes, etc.', 'Construction of binary tree from traversals, Binary Search trees (BST): Insertion, deletion of a node from BST.', 'Threaded Binary tree (TBT): Creation and traversals on TBT, AVL tree.', 'Advanced Trees: Red-Black Trees, B-Trees and B+ Trees, Splay trees, Tries and compressed tries, Suffix Trees.', 'Randomized Data Structures: Skip Lists and Treaps.'] }, { hours: NULL, title: 'Graph', topics: ['Terminology and representation using Adjacency Matrix and Adjacency Lists.', 'Graph Traversals and Application: BFS and DFS.', 'Minimum Spanning tree: Prims and Kruskal’s Algorithm.', 'Shortest Path Algorithms: Single Source All destinations, all-pair shortest path algorithm, Topological Sort.'] }, { hours: NULL, title: 'Hashing', topics: ['Hashing techniques, Hash table, Hash functions.', 'Collision handling and Collision resolution techniques, Cuckoo Hashing.', 'Dynamic Hashing: Motivation for Dynamic Hashing, Dynamic Hashing using Directories, directory less Dynamic Hashing.', 'Bloom Filters Bloom Filter Design.'] }, { hours: NULL, title: 'Heap', topics: ['Amortized Analysis', 'Double Ended Priority queues', 'Leftist Trees', 'Binomial Heaps, Fibonacci Heaps, skew heaps, pairing heaps.'] }], seminar: NULL, teaching_scheme: { lab: '2 Hours/Week', theory: '3 Hours/Week', tutorial: '1 Hour/Week' }, textbooks: ["James F. Kurose, and Keith W. Ross, 'A Top--Down Approach,' 4th edition, Publisher: Addison--Wesley ISBN: 0--321--49770--8", "Behrouz A. Forouzan, 'Data Communication and Networking', 4th edition, Tata McGraw Hill", "Andrew S. Tanenbaum, 'Computer Networks', 5th Edition, Pearson Education"], tutorials: ['Sorting Techniques: Quick, bucket sort, etc.', 'Searching Techniques: Ternary Search, Fibonacci Search.', 'Problem-solving using stack (Maze problem, Tower of Hanoi).', 'Expression conversion like infix to prefix and postfix and vice versa.', 'Priority Queues Job Scheduling Algorithms.', 'Generalized Linked Lists.', 'AVL tree.', 'Routing network problems.', 'Design of Hashing Functions and Collision Resolution techniques.', 'Cuckoo Hashing.'] };
UPDATE courses:ai CONTENT { assessment_scheme: ['Lab', 'Course Project', 'ESE', 'CVV'], code: 'IT3218', credits: 4, group_discussion: NULL, home_assignment: NULL, id: courses:ai, image: 'courses/ai.webp', name: 'Artificial Intelligence', objectives: ['To make students familiar with basic principles of AI', 'To make students capable of using heuristic searches', 'To make students aware of knowledge-based systems', 'To make students able to use fuzzy logic and neural networks', 'To make students learn various application domains of AI'], outcomes: ['To make students familiar with basic principles of AI', 'To make students capable of using heuristic searches', 'To make students aware of knowledge-based systems', 'To make students able to use fuzzy logic and neural networks', 'To make students learn various application domains of AI'], practicals: ['Implement Non-AI and AI Techniques', 'Implement any one Technique from the following...', 'Implement Perceptron learning algorithm', 'Implement a real-life application in Prolog.', 'Expert System in Prolog-new application', 'Implement any two Player game using min-max search algorithm.', 'Design a fuzzy set for shape matching of handwritten character', 'Conducting Turing test of an online chat robot', 'Any real application of AI in gaming', 'Spam email detection and classification using any simple classifier'], prerequisites: ['Data structures', 'Computer programming'], project: NULL, projects: ['Pattern recognition – Classification, Clustering, hybrid-classification clustering', 'Prediction using - Regression – Linear or nonlinear', 'Game playing - single player/2-player/multi-player', 'Use of Knowledge-based system for generating inferences', 'Deep Learning', 'Neural network training and using for a real application', 'Use of fuzzy sets for human-like reasoning', 'Use of any ML algorithm for solving real-world problem', 'Deep Learning framework-PyTorch', 'Expert system applications in medicine suggestions', 'Some other projects mutually decided by instructor and students'], reference_books: ['Ivan Bratko, Prolog Programming For Artificial Intelligence, 2nd Ed. Addison Wesley, 1986.', 'Eugene, Charniak, Drew Mcdermott, Introduction to Artificial Intelligence, Addison Wesley, 1985', 'Dan W Patterson, Introduction to AI and Expert Systems, PHI, 1990', 'Nils J. Nilsson, Principles of Artificial Intelligence, 1st Ed., Morgan Kaufmann, 1982', 'Carl Townsend, Introduction to turbo Prolog, Paperback, 1987', 'Jacek M. Zurada, Introduction to artificial neural systems, Jaico Publication, 1994'], relevance: 'Artificial Intelligence is a rapidly growing field that is transforming many industries, including healthcare, finance, and transportation. This course covers the fundamental concepts of AI, including machine learning, natural language processing, and computer vision, which are essential for understanding and developing intelligent systems.', sections: [{ hours: NULL, title: 'Fundamentals of Artificial Intelligence', topics: ['Introduction', 'A.I. Representation', 'Non-AI & AI Techniques', 'Representation of Knowledge', 'KnowledgeBase Systems', 'State Space Search', 'Production Systems', 'Problem Characteristics', 'types of production systems', 'Intelligent Agents and Environments', 'concept of rationality', 'the nature of environments', 'structure of agents', 'problem solving agents', 'problem formulation'] }, { hours: NULL, title: 'Uninformed Search Strategies', topics: ['Formulation of real-world problems', 'Breadth First Search', 'Depth First Search', 'Depth Limited Search', 'Iterative Deepening Depth First Search', 'Bidirectional Search', 'Comparison of Uninformed search Strategies'] }, { hours: NULL, title: 'Informed Search Strategies', topics: ['Generate & test', 'Hill Climbing', 'Best First Search', 'A*', 'Game playing: Minimax Search', 'Alpha-Beta Cutoffs', 'Waiting for Quiescence'] }, { hours: NULL, title: 'Knowledge Representation', topics: ['Knowledge based agents', 'Wumpus world', 'Propositional Logic'] }, { hours: NULL, title: 'Introduction to PROLOG and ANN', topics: ['null'] }], seminar: NULL, teaching_scheme: { lab: '2 Hours/Week', theory: '2 Hours/Week', tutorial: '1 Hour/Week' }, textbooks: ['Elaine Rich and Kevin Knight, Artificial Intelligence, 2nd, Ed., Tata McGraw Hill, 1991', 'Stuart Russell & Peter Norvig, Artificial Intelligence : A Modern Approach, 2nd, Ed., Pearson Education, 2003'], tutorials: NULL };
UPDATE courses:at CONTENT { assessment_scheme: NULL, code: 'IT2004', credits: 2, group_discussion: NULL, home_assignment: NULL, id: courses:at, image: 'courses/at.webp', name: 'Automata Theory', objectives: ['To design suitable computational model/s for accepting / recognizing a given formal language', 'To compare computational models with respect to their power in recognizing different types of languages', 'To understand the notion of un/decidability of problems'], outcomes: ['To design suitable computational model/s for accepting / recognizing a given formal language', 'To compare computational models with respect to their power in recognizing different types of languages', 'To understand the notion of un/decidability of problems'], practicals: NULL, prerequisites: ['Basic Mathematics', 'Programming'], project: NULL, projects: NULL, reference_books: ["Mishra K.L.P, N. Chandrasekaran, 'Theory of Computer Science: Automata, Languages and Computation', Third Edition, PHI, ISBN 978-8120329683", "John C. Martin, 'Introduction to Languages and The Theory of Computation', Fourth Edition, McGraw Hill, ISBN 978-0-07-319146-1"], relevance: 'Automata Theory is a foundational course in computer science that provides a theoretical basis for understanding computation. It covers the basic concepts of automata, formal languages, and computability theory, which are essential for understanding the limits and capabilities of computing systems.', sections: [{ hours: 5, title: 'Finite Automata', topics: ['Automaton as a model of computation', 'Alphabets, Strings, Languages', 'Deterministic Finite Automata (DFA)', 'Nondeterministic finite Automata (NFA)', 'State Minimization algorithm', 'NFA with epsilon transition', 'pumping lemma'] }, { hours: 5, title: 'Regular Expressions', topics: ['Definition of Regular Expression (RE)', 'Applications of Regular Expression', 'Kleene’s Theorem: Equivalence of RE and DFA', 'Closure properties of Regular Languages', 'Myhill-Nerode theorem and its applications'] }, { hours: 4, title: 'Grammars', topics: ['Chomsky hierarchy', 'Context Free Grammars (CFG)', 'Derivation', 'Languages of CFG', 'Constructing CFG', 'Derivation trees', 'Ambiguity in CFGs', 'Removing ambiguity', 'CNF', 'GNF', 'Applications of CFG'] }, { hours: 5, title: 'Pushdown Automata', topics: ['Pushdown Automata (PDA)', 'Acceptance by final state / empty stack', 'Deterministic and Non-deterministic PDAs', 'Equivalence of PDA and CFG', 'Context Sensitive Languages', 'Context Sensitive Grammars', 'Linear Bounded Automata'] }, { hours: 5, title: 'Turing Machine', topics: ['TM definition', 'Instantaneous Description', 'Language acceptance', 'Robustness of TM', 'Equivalence of TM variants', 'Universal Turing Machine', 'TM as enumerator', 'Recursive and Recursively Enumerable languages and their closure properties', 'Church-Turing thesis'] }, { hours: 4, title: 'Undecidability', topics: ['Complexity classes', 'Decidability', 'Undecidability of halting problem', 'Post correspondence problem'] }], seminar: NULL, teaching_scheme: { theory: '2 Hours/Week' }, textbooks: ["Hopcroft J, Motwani R, Ullman, Addison-Wesley, 'Introduction to Automata Theory, Languages and Computation', Second Edition, ISBN 81-7808-347-7", "Michael Sipser, 'Introduction to Theory of Computation', Third Edition, Course Technology, ISBN 10: 053494728X"], tutorials: NULL };
UPDATE courses:cc CONTENT { assessment_scheme: NULL, code: 'IT3207', credits: 4, group_discussion: NULL, home_assignment: NULL, id: courses:cc, image: 'courses/cc.webp', name: 'Cloud Computing', objectives: ['To study fundamental concepts of Cloud Computing.', 'To understand the basics of virtualization in Cloud Computing.', 'To learn security management in Cloud Computing.'], outcomes: ['To study fundamental concepts of Cloud Computing.', 'To understand the basics of virtualization in Cloud Computing.', 'To learn security management in Cloud Computing.'], practicals: NULL, prerequisites: ['Computer Programming', 'Database Management Systems', 'Operating System', 'Computer Network'], project: NULL, projects: NULL, reference_books: ["Barrie Sosinsky, 'Cloud Computing Bible', Wiley India", "Antohy T Velte, et.al, 'Cloud Computing: A Practical Approach', McGraw Hill.", "McGraw Hill, 'Cloud Computing', Que Publishing."], relevance: 'Cloud Computing is a rapidly growing field that is transforming the way businesses and organizations manage their IT infrastructure. This course covers the fundamental concepts of cloud computing, including virtualization, distributed systems, and cloud security, which are essential for understanding and developing cloud-based applications and services.', sections: [{ hours: 4, title: 'UNIT 1: Introduction to Cloud Computing (4 Hours)', topics: ['Definition', 'Characteristics', 'Components', 'Cloud Types', 'Cloud Service Models', 'Cloud provider, benefits and limitations', 'Cloud computing vs. Cluster computing vs. Grid computing'] }, { hours: 5, title: 'UNIT 2: Virtualization Technology (5 Hours)', topics: ['Introduction & benefit of Virtualization', 'Different approaches to virtualization', 'Hypervisors', 'Machine Image', 'Virtual Machine (VM)', 'Virtualization: Server, Storage, Network', 'Virtual Machine (resource) provisioning and manageability', 'storage as a service, Data storage in cloud computing(storage as a service)', 'Multitenant software', 'Data access control for enterprise applications'] }, { hours: 5, title: 'UNIT 3: Overview of Cloud file-systems (5 Hours)', topics: ['GFS and HDFS, BigTable', 'Features and comparisons among GFS, HDFS.', 'Databases on Cloud: NoSQL, MogoDB, HBase, Hive, Dynamo, Graph databases'] }, { hours: 6, title: 'UNIT 4: Cloud Platforms and Cloud Applications (6 Hours)', topics: ['Amazon Web Services (AWS), Microsoft Azure', 'Cloud Computing Applications', 'Google App Engine', 'Map-Reduce and extensions', 'Service Oriented Architecture (SOA), Web services, Web 2.0, Web OS'] }, { hours: 4, title: 'UNIT 5: Service Management in Cloud Computing (4 Hours)', topics: ['Service Level Agreements(SLAs), Billing & Accounting', 'Comparing Scaling Hardware: Traditional vs. Cloud', 'Economics of scaling: Benefitting enormously', 'Managing Data - Looking at Data, Scalability & Cloud Services', 'Database & Data Stores in Cloud, Large Scale Data Processing'] }, { hours: 4, title: 'Unit 6: Cloud Security (4 Hours)', topics: ['Infrastructure Security - Network level security, Host level security, Application level security', 'Data security and Storage - Data privacy and security Issues.', 'Jurisdictional issues raised by Data location: Identity & Access Management, Access Control, Trust, Reputation, Risk, Authentication in cloud computing, Client access in cloud, Cloud contracting Model, Commercial and business considerations'] }], seminar: NULL, teaching_scheme: { lab: '2 Hours/Week', theory: '2 Hours/Week', tutorial: '1 Hour/Week' }, textbooks: ["Judith Hurwitz, R.Bloor, M.Kanfman, F.Halper, 'Cloud Computing for Dummies', Wiley India.", "Ronald Krutz and Russell Dean Vines, 'Cloud Security', Wiley-India"], tutorials: NULL };
UPDATE courses:cn CONTENT { assessment_scheme: ['PPT/GD', 'HA', 'ESE', 'Course Project', 'CVV'], code: 'IT2266', credits: 4, group_discussion: ['TCP/IP Model', 'Mobile IP', 'Congestion Control and QoS', 'Wireless Technology for Short range and long range', 'Application Protocols and its security', 'IP Protocols', 'Data Communication Issues in IP Networks and Solutions to it', 'Congestion control in hybrid networks', 'Issues in Real-time Audio and video transmission protocol.', 'IPV6'], home_assignment: [{ topics: ['Enumerate the challenges in Line coding. Draw the line code for the sequence 010011110 using Polar NRZ--L and NRZ--1 schemes.', 'Design the procedure to configure TCP/IP network layer services.', 'Simulation of Routing Protocols using NS2', 'Simulation of FTP based Protocols using CISCO packet Tracer/ NS2', 'Simulation of Congestion Control Protocols Using NS2'], type: 'Design' }, { topics: ['Amplitude and Frequency Modulation Technique', 'Digital to Analog and Analog to Digital converters', 'Study of Various VPNs', 'IoT Solutions to Current Network Requirement', 'Unix Solutions for Broadcast System'], type: 'Case Study' }, { topics: ['Communication Protocol', 'Emerging Trends in Computer Networks', 'Use of IoT in Networks', 'Cloud-based Network Solutions for real-world problems', 'Recent Trends in Computer Security'], type: 'Blog' }, { topics: ['Survey of wireless Technologies', 'Survey of Congestion control methodologies', 'Survey of Bluetooth Technology', 'Survey of Virtual Private Networks', 'Survey of ADHOC Networks'], type: 'Surveys' }], id: courses:cn, image: 'courses/cn.webp', name: 'Computer Networks', objectives: ['Understand the importance of Computer Network and its usage.', 'Study error control and flow control techniques.', 'Solve real-world problems in the context of today’s internet (TCP/IP and UDP/IP).', 'Distinguish and relate various physical Medias, interfacing standards and adapters.', 'Implement mathematically and logically the working of computer protocols in abstract.'], outcomes: ['Understand the importance of Computer Network and its usage.', 'Study error control and flow control techniques.', 'Solve real-world problems in the context of today’s internet (TCP/IP and UDP/IP).', 'Distinguish and relate various physical Medias, interfacing standards and adapters.', 'Implement mathematically and logically the working of computer protocols in abstract.'], practicals: ['Study and implement various networking commands on terminal.', 'Use Socket programming to create Client and Server to send Hello message.', 'Write a program for error detection and correction for 7/8 bits ASCII codes using Hamming Codes or CRC. Demonstrate the packets captured traces using Wireshark Packet Analyzer Tool for peer-to-peer mode. (50% students will perform Hamming Code and others will perform CRC)', 'Write a program to simulate Go back N and Selective Repeat Modes of Sliding Window Protocol in peer-to-peer mode', 'Write a program to find class and type of a given IP address.', 'Write a program to demonstrate subnetting and find the subnet masks.', 'Write a program using TCP socket for wired network for the following: a. Say Hello to Each other (For all students) b. File transfer (For all students) c. Calculator (Arithmetic) (50% students) d. Calculator (Trigonometry) (50% students)', 'Write a program using UDP Sockets to enable file transfer (Script, Text, Audio and Video one file each) between two machines.', 'Write a program to implement: a. Network Routing: Shortest path routing, AODV. b. Analysis of congestion control (TCP and UDP).', 'Write a program to analyze the following packet formats captured through Wireshark for wired networks. 1. Ethernet 2. IP 3. TCP 4. UDP'], prerequisites: ['Fundamentals of Computer', 'C/C++ programming'], project: NULL, projects: ['Write a program using TCP sockets for wired networks to implement a. Peer to Peer Chat b. Multi-User Chat Demonstrate the packets captured traces using Wireshark Packet Analyzer Tool for peer-to-peer mode.', 'Implementation of shortest path protocol', 'Implementation of string encryption and decryption', 'Implementation of character stuffing and destuffing', 'Execution and analysis of Network commands', 'To find out details of network from IP addressing scheme using ‘C’ code', 'Implement real-time Internet route optimization.', 'Implement Broadcast Server System.', 'Implement a real-time voting System.', 'Real-time packet capture and analysis for malwares in wireless networks.'], reference_books: ["Kurose, Ross, 'Computer Networking a Top Down Approach Featuring the Internet', Pearson; 6th edition (March 5, 2012), ISBN--10: 0132856204", "Holger Karl and Andreas Willig, 'Protocols and Architectures for Wireless Sensor Network', Wiley, ISBN: 0--470--09510--5", "C. Siva Ram Murthy and B. S. Manoj, 'Ad Hoc Wireless Networks: Architectures and Protocols', Prentice Hall, 2004"], relevance: 'Computer Networks is a foundational course in computer science that covers the fundamental concepts of network architecture, protocols, and technologies. It is essential for understanding how modern computer systems communicate and interact with each other, and is relevant for students interested in pursuing careers in networking, cybersecurity, and software engineering.', sections: [{ hours: NULL, title: 'Introduction', topics: ['Introduction to computer network, LAN, MAN, WAN, PAN, Ad hoc Networks, Network Architectures Client Server, Peer To Peer, Network Topologies Bus, ring, tree, star, mesh, hybrid.', 'Communication Models OSI Model, TCP/IP Model, Design issues for layers.'] }, { hours: NULL, title: 'Physical Layer', topics: ['Transmission media Guided media, unguided media.', 'Transmission Modes Simplex, Half Duplex and Full Duplex.', 'Network Devices Hub, Repeater, Bridge, Switch, Router, Gateways and Brouter.', 'Spread spectrum signal, FHSS, DSSS.'] }, { hours: NULL, title: 'Data Link Layer', topics: ['Logical Link Layer Services to Network Layer, Framing, Error Control and Flow Control.', 'Framing in LLC framing challenges, types of framing.', 'Error Control in LLC error detection, error correction, Parity Bits, Hamming Codes (11/12 bits) and CRC.', 'Flow Control Protocols Unrestricted Simplex, Stop and Wait, Sliding Window Protocol.', 'WAN Connectivity PPP and HDLC.'] }, { hours: NULL, title: 'Medium Access Control', topics: ['Channel Allocation Static and Dynamic, Multiple Access Protocols Pure and Slotted ALOHA, CSMA, WDMA, IEEE 802.3 Standards and Frame Formats, CSMA/CD.'] }, { hours: NULL, title: 'Network Layer', topics: ['Switching techniques, IP Protocol, IPv4 and IPv6 addressing schemes, Subnetting, NAT, CIDR, ICMP, Routing Protocols-- Distance Vector, Link State, Path Vector, Routing in Internet-- RIP, OSPF, BGP, Congestion control and QoS.'] }, { hours: NULL, title: 'Transport Layer', topics: ['Services, Berkeley Sockets, Addressing, Connection establishment, Connection release, Flow control and buffering, Multiplexing, TCP, TCP Timer management, Quality of Service (QoS), Differentiated services, TCP and UDP for Wireless.'] }, { hours: NULL, title: 'Application Layer', topics: ['Domain Name System (DNS), Hyper Text Transfer Protocol (HTTP), Email: SMTP, MIME, POP3, Webmail, FTP, TELNET, Dynamic Host Control Protocol (DHCP), Simple Network Management Protocol (SNMP).'] }], seminar: ['Asynchronous Transfer Mode', 'Need Of Multiplexing for Signal Modulation', 'TDM with PAM a case study', 'Noise signal', 'Basic Network Protocols', 'Manchester Vs Differential Manchester coding technique', 'Amplitude Shift Keying: Working and Applications', 'Nyquist Sampling Theorem', 'CDMA', 'Line coding Techniques with example'], teaching_scheme: { lab: '2 Hours/Week', theory: '2 Hours/Week', tutorial: '1 Hours/Week' }, textbooks: ["James F. Kurose, and Keith W. Ross, 'A Top--Down Approach,' 4th edition, Publisher: Addison--Wesley ISBN: 0--321--49770--8", "Behrouz A. Forouzan, 'Data Communication and Networking', 4th edition, Tata McGraw Hill", "Andrew S. Tanenbaum, 'Computer Networks', 5th Edition, Pearson Education"], tutorials: ['Identification of various networks components', 'Establishing LAN', 'Installation of network device drivers', 'Use/installation of proxy server', 'Configuration of network devices in CISCO packet tracer (Windows/Linux)', 'Implement communication between various network devices using CISCO packet tracer (Windows/Linux)', 'Network traffic monitoring using Wireshark/Ethereal (Windows/Linux)'] };
UPDATE courses:daaa CONTENT { assessment_scheme: ['Home Assignment', 'MSE & ESE (Mid-Semester Examination & End-Semester Examination)', 'Seminar', 'LAB - Course Assignment and Project Evaluation'], code: 'IT3215', credits: 5, group_discussion: NULL, home_assignment: [{ topics: ['Divide and Conquer strategy for real-world problem solving', 'Dynamic Programming strategy for real-world problem solving', 'Problems on Randomized Algorithms', 'Problems on Approximation Algorithms', 'Problems on NP completeness'], type: 'Design' }, { topics: ['Encoding techniques', 'Network flow optimization algorithms', 'Approximation algorithms for TSP', 'Sorting techniques', 'AKS primality test'], type: 'Case Study' }, { topics: ['How to decide the suitability of Approximation Algorithms', 'When do Randomized Algorithms perform best', 'Applications of Computational Geometry Algorithms', 'Role of number-theoretic algorithms in cryptography', 'Performance analysis of Graph Theoretic Algorithms'], type: 'Blog' }, { topics: ['Primality Testing Algorithms', 'Integer Factoring Algorithms', 'Shortest Path Algorithms', 'Algorithms for finding Minimum Weight Spanning Tree', 'SAT solvers'], type: 'Surveys' }], id: courses:daaa, image: 'courses/daaa.webp', name: 'Design and Analysis of Algorithms', objectives: ['To understand asymptotic notations and apply suitable mathematical techniques to find asymptotic time and space complexities of algorithms.', 'To provide students with foundations to deal with a variety of computational problems using different design strategies.', 'To select appropriate algorithm design strategies to solve real-world problems.', 'To understand notions of NP-hardness and NP-completeness and their relationship with the intractability of decision problems.', 'To understand randomized, approximation algorithms for given computational problems.'], outcomes: ['To understand asymptotic notations and apply suitable mathematical techniques to find asymptotic time and space complexities of algorithms.', 'To provide students with foundations to deal with a variety of computational problems using different design strategies.', 'To select appropriate algorithm design strategies to solve real-world problems.', 'To understand notions of NP-hardness and NP-completeness and their relationship with the intractability of decision problems.', 'To understand randomized, approximation algorithms for given computational problems.'], practicals: ['Assignment based on some simple coding problems on numbers, graphs, matrices.', 'Assignment based on analysis of quick sort (deterministic and randomized variant).', 'Assignment based on Divide and Conquer strategy (e.g. majority element search, finding kth rank element in an array).', 'Assignment based on Divide and Conquer strategy (e.g. efficient algorithm for Josephus problem using recurrence relations, fast modular exponentiation).', 'Assignment based on Dynamic Programming strategy (e.g. Matrix chain multiplication, Longest increasing subsequence).', 'Assignment based on Dynamic Programming strategy (e.g. All pair shortest path, Traveling Sales Person problem).', 'Assignment based on Greedy strategy (e.g. Huffman encoding, fractional knapsack problem).', 'Assignment based on Backtracking (e.g. graph coloring, n-queen problem).', 'Assignment based on Las-Vegas and Monte-Carlo algorithm for majority element search.', 'Assignment based on factor-2 approximation algorithm for metric-TSP.'], prerequisites: ['Basic programming Skills', 'Data structures', 'Discrete Structures'], project: NULL, projects: ['Applications of A* algorithm in gaming', 'Pac-Man game', 'Creation / Solution of Maze (comparing the backtracking-based solution and Dijkstra’s algorithm).', 'Different exact and approximation algorithms for Travelling-Sales-Person Problem.', 'Knight tour algorithms.', 'Network flow optimization and maximum matching.', 'AI for different games such as minesweeper, shooting games, Hex, connect-4, sokoban, etc.', 'SUDOKU solver.', 'Algorithms for factoring large integers.', 'Randomized algorithms for primality testing (Miller-Rabin, Solovay-Strassen).', 'Slider puzzle game.'], reference_books: ['Anany Levitin, “Introduction to the Design & Analysis of Algorithm”, Pearson, ISBN 81-7758-835-4.', 'Gilles Brassard, Paul Bratle, Fundamentals of Algorithms, Pearson, ISBN 978-81-317-1244-3.', 'Motwani, Raghavan “Randomized Algorithms”, 1st edition (August 25, 1995), ISBN-10: 0521474655, ISBN-13: 978-0521474658, Cambridge University Press', 'Vazirani, “Approximation Algorithms”, ISBN-10: 3642084699, ISBN-13: 978-3642084690, Springer (December 8, 2010)'], relevance: 'Design and Analysis of Algorithms is a core course in computer science that covers the fundamental concepts of algorithm design, analysis, and optimization. It is essential for understanding how to develop efficient and scalable software systems, and is relevant for students interested in pursuing careers in software engineering, data science, and theoretical computer science.', sections: [{ title: 'Basic introduction to time and space complexity analysis', topics: ['Asymptotic notations (Big Oh, small oh, Big Omega, Theta notations).', 'Best case, average case, and worst-case time and space complexity of algorithms.', 'Using Recurrence relations and Mathematical Induction to get asymptotic bounds on time complexity.', 'Master’s theorem and applications.', 'Proving correctness of algorithms.'] }, { title: 'Divide and Conquer', topics: ['General strategy, Binary search and applications.', 'Analyzing Quick sort, Merge sort, Counting Inversions, finding a majority element.', "Josephus problem using recurrence, Efficient algorithms for Integer arithmetic (Euclid's algorithm, Karatsuba's algorithm for integer multiplication, fast exponentiation)."] }, { title: 'Greedy strategy', topics: ['General strategy, Analysis and correctness proof of minimum spanning tree and shortest path algorithms, fractional knapsack problem, Huffman coding, conflict-free scheduling.'] }, { title: 'Dynamic Programming', topics: ['General strategy, Principle of Optimality, simple dynamic programming-based algorithms to compute Fibonacci numbers, binomial coefficients, Matrix Chain multiplication, Optimal binary search tree (OBST) construction, Coin change problem, 0-1 Knapsack, Traveling Salesperson Problem, Bellman Ford shortest path algorithm, longest increasing subsequence problem, Largest independent set for trees.'] }, { title: 'Backtracking strategy', topics: ['General strategy, n-queen problem, backtracking strategy for some NP Complete problems (e.g., graph coloring, subset sum problem).'] }, { title: 'Branch and Bound strategy', topics: ['Control abstraction for LIFO, Least Cost Search and FIFO branch and bound, 0-1 knapsack problem using LC branch and bound.'] }, { title: 'Computational Complexity classes', topics: ['Complexity classes P, NP, NP-complete, NP Hard and their interrelation.', 'Notion of polynomial time reduction, Cook-Levin theorem and implication to P versus NP question, Satisfiability Problem, NP-hardness of halting problem, NP-Complete problems (some selected examples).'] }, { title: 'Introduction to Randomized and Approximation algorithms', topics: ['Introduction to randomness in computation, Las-Vegas and Monte-Carlo algorithms, Abundance of witnesses/solutions and application of randomization, randomized quick sort, Introduction to Approximation algorithms for NP-optimization problems (like Vertex Cover).'] }], seminar: ['Complexity classes', 'Space complexity', 'Divide and Conquer Vs Dynamic Programming', 'Greedy strategy Vs Backtracking strategy', 'Dynamic Programming Vs Greedy', 'Computational Complexity', 'Comparison of P Vs NP problems', 'Compression Techniques', 'Approximation algorithms', 'Pseudorandom number generators'], teaching_scheme: { Lab: '2 Hours/Week', Theory: '3 Hours/Week', Tutorial: '1 Hour/Week' }, textbooks: ['Cormen, Leiserson, Rivest and Stein “Introduction to Algorithms”, 3rd edition, 2009. ISBN 81-203-2141-3, PHI', 'Horowitz and Sahani, Fundamentals of computer Algorithms, Galgotia, ISBN 81-7371-612-9', 'Jon Kleinberg, Eva Tardos “Algorithm Design”, 1st edition, 2005. ISBN 978-81-317-0310-6, Pearson', 'Dasgupta, Papadimitriu, Vazirani “Algorithms”, 1st edition (September 13, 2006), ISBN-10: 9780073523408, ISBN-13: 978-0073523408, McGraw-Hill Education'], tutorials: NULL };
UPDATE courses:deam CONTENT { assessment_scheme: NULL, code: 'IT2275', credits: 4, group_discussion: NULL, home_assignment: NULL, id: courses:deam, image: 'courses/deam.webp', name: 'Digital Electronics and Microprocessor', objectives: ['To understand all the concepts of Logic Gates and Boolean Functions.', 'To learn about Combinational Logic and Sequential Logic Circuits.', 'To design Combinational Logic and Sequential Logic Circuits', 'To understand basics of 8086 Microprocessor architecture'], outcomes: ['To understand all the concepts of Logic Gates and Boolean Functions.', 'To learn about Combinational Logic and Sequential Logic Circuits.', 'To design Combinational Logic and Sequential Logic Circuits', 'To understand basics of 8086 Microprocessor architecture'], practicals: ['Verification of Logical Gates and Boolean Algebra', 'Code converters e.g. Excess-3 to BCD and vice versa using logical gates', 'Multiplexer - e.g. 16:1 Mux using 4:1 Mux (IC 74153)', 'Decoder – e.g. 2 bit comparator (IC 74138)', 'Synchronous Up /down counter using JK flip-flop', 'Sequences detector using JK flip flop', 'Study of 8086 Architecture and Execution of sample programs', 'Write 8086 ALP to find and count negative and positive number from signed array stored in memory and display magnitude of negative numbers', 'Write 8086 ALP to access marks of 5 subjects stored in array and find overall percentage and display grade according to it', 'Write 8086 ALP to perform block transfer operation. (Don’t use string operations). Data bytes in a block stored in one array transfer to another array', 'Write 8086 ALP for following operations on the string entered by the user. (Use Extern Far Procedure). a. String length b. Reverse of the String c. Palindrome'], prerequisites: ['Basic electronics system'], project: NULL, projects: NULL, reference_books: ["Ray Duncan, 'Advanced MS DOS Programming', 2nd Edition BPB Publications ISBN 0 – 07 – 048677 – 8", "M. Mano, 'Digital Design', 3rd Edition, Pearson Education, 2002, ISBN - 81 - 7808 – 555 – 0", "A. Malvino, D. Leach, 'Digital Principles and Applications', 5th Edition, Tata McGraw Hill, 2003, ISBN 0 - 07 - 047258 – 05"], relevance: 'Digital Electronics and Microprocessors is a foundational course in computer engineering that covers the fundamental concepts of digital circuits and microprocessors. It is essential for understanding how modern computer systems are designed and built, and how to program them in assembly language.', sections: [{ hours: NULL, title: 'Digital Fundamentals', topics: ['Number Systems – Decimal, Binary, Octal, Hexadecimal', 'Codes – Binary, BCD, Excess 3, Gray', 'Sum of products and product of sums', 'Minterms and Maxterms', 'Standard representation for logic functions', 'Simplification of logic functions using K-map', 'Minimization of logical functions', 'Dont care conditions', 'Code converter', 'Characteristics of Digital IC’s'] }, { hours: NULL, title: 'Combinational Digital Circuits', topics: ['Adders, Subtractors', 'Multiplexers & De-multiplexers', 'Encoder: Priority encoders', 'Decoders: 74138', 'ALU: 74181', 'Parity generator and checker', 'BCD adder and subtractor'] }, { hours: NULL, title: 'Sequential Circuit', topics: ['Introduction of flip-flop (F.F), 1 bit memory cell', 'Clocked S-R F.F., J-K F.F. race around condition', 'M/S J-K F.F, flip-flop truth table, excitation table', 'Flip-flop conversion, flip-flop characteristics', 'T and D F.F', 'Design of 4 – bit UP-Down ripple counter using J-K flip-flop', 'Design of Synchronous 3 bit up/down counter', 'Mod-n counters (IC -7490, 7493)'] }, { hours: NULL, title: 'Introduction to 8086 microprocessor', topics: ['Internal Architecture', 'Generation of physical address 8086', '8086 memory segmentation', 'Register Organization', 'Addressing modes: Immediate addressing, Register addressing, Direct addressing, Indirect addressing, Relative addressing, Indexed addressing, Bit inherent addressing, bit direct addressing', '8086 Instructions types and Interrupt Structure', 'Instruction types, formats, timings', 'Data transfer instructions, Arithmetic instructions', 'Logical instructions, Branch instructions', 'Subroutine instructions, Bit manipulation instruction', '8086 pin functions: Minimum & Maximum Mode System', 'Interrupt Structure, Interrupt service Routine', 'Interrupt Vector Table, Hardware and Software Interrupts', 'INTR, NMI, Interrupt Response', 'Multiprocessor Architecture UMA, NUMA, COMA MPP Processor', 'Loosely and Tightly coupled multiprocessors', 'Characteristics of multiprocessors & multiprocessing', 'Inter Processor communication network', 'Time shared bus, Crossbar switch', 'Interleaved memories S access, C access', 'Cache coherency and bus snooping and directory based protocols', 'Massively Parallel Processors (MPP)', 'Inter Processor Communication and Synchronization'] }], seminar: NULL, teaching_scheme: { lab: '2 Hours/Week', theory: '2 Hours/Week', tutorial: '1 Hour/Week' }, textbooks: ["Douglas Hall, 'Microprocessors and Interfacing', 2nd Edition, Tata McGraw Hill Publications, ISBN 0-07-025742-6", "'Advanced 80386, programming techniques', James Turley, Tata McGraw Hill Publications, ISBN – 0-07-881342-5", "Intel 80386 Programmer's Reference Manual 1986, Intel Corporation, Order no.: 231630- 011, December 1995", "R.P. Jain, 'Modern Digital Electronics', 3rd Edition, Tata McGraw-Hill, 2003, ISBN 0 - 07 - 049492 – 4"], tutorials: NULL };
UPDATE courses:dt CONTENT { assessment_scheme: ['Publication of paper or patent'], code: 'IT2268', credits: 1, group_discussion: NULL, home_assignment: NULL, id: courses:dt, image: 'courses/dt.webp', name: 'Design Thinking-III', objectives: ['To provide an ecosystem for students and faculty for paper publication and patent filing'], outcomes: NULL, practicals: NULL, project: NULL, projects: NULL, reference_books: NULL, relevance: 'Design Thinking is a course that teaches students how to approach complex problems and develop innovative solutions using a human-centered design approach. It goes hand-in-hand with Engineering Design and innovation and teaches students to ideate, prototype and test effective, reliable solutions.', sections: [{ hours: NULL, title: 'Paper Writing', topics: ['Structure of The paper', 'Journal List (Top 50 Journals)', 'Selection of the journal', 'Use of various online journal selection tools', 'Plagiarism checking', 'Improving contents of the paper', 'Writing answers to reviewer questions', 'Modification in manuscript', 'Checking of publication draft'] }, { hours: NULL, title: 'Patent', topics: ['Patent drafting', 'Patent search', 'Filing of patent'] }], seminar: NULL, teaching_scheme: { tutorial: '1 Hour/Week' }, textbooks: NULL, tutorials: NULL };
UPDATE courses:edai CONTENT { assessment_scheme: ['MSE and ESE'], code: 'IT2272', credits: 4, group_discussion: NULL, home_assignment: NULL, id: courses:edai, image: 'courses/edai.webp', name: 'Engineering Design and Innovation III', objectives: ['Develop critical thinking and problem-solving ability by exploring and proposing solutions to realistic/social problems.', 'Evaluate alternative approaches and justify the use of selected tools and methods.', 'Emphasize learning activities that are long-term, interdisciplinary, and student-centric.', 'Engage students in rich and authentic learning experiences.', 'Provide every student the opportunity to get involved either individually or as a group to develop team skills and learn professionalism.', 'Develop an ecosystem to promote entrepreneurship and research culture among the students.'], outcomes: ['Develop critical thinking and problem-solving ability by exploring and proposing solutions to realistic/social problems.', 'Evaluate alternative approaches and justify the use of selected tools and methods.', 'Emphasize learning activities that are long-term, interdisciplinary, and student-centric.', 'Engage students in rich and authentic learning experiences.', 'Provide every student the opportunity to get involved either individually or as a group to develop team skills and learn professionalism.', 'Develop an ecosystem to promote entrepreneurship and research culture among the students.'], practicals: NULL, prerequisites: ['Problem Based Learning'], project: NULL, projects: NULL, reference_books: ['De Graaff E, Kolmos A., Management of Change: Implementation of Problem-Based and Project-Based Learning in Engineering., Sense Publishers, null', 'Gopalan, Project Management Core Textbook, Second Edition, Indian Edition., null, null', 'James Shore & Shane Warden, The Art of Agile Development., null, null'], relevance: 'Project Centric Learning (PCL) is a powerful tool for students to work in areas of their choice and strengths. Along with course-based projects, the curriculum can be enriched with semester-long Engineering Design and Development courses, in which students can solve socially relevant problems using various technologies from relevant disciplines.', sections: ['The content and process mentioned below is the guideline document for the faculties and students to start with. It is not to limit the flexibility of faculty and students; rather, they are free to explore their creativity beyond the guideline mentioned herewith.', 'Industry Communication Standards', 'Single Board Computers and IoT', 'Computational Biology(Biomedical and Bioinformatics)', 'Robotics and Drone', 'Industry 4.0 (Artificial Intelligence, Human Computer Interfacing, 5G and IoT, Cloud Computing, Big Data, and Cyber Securityetc)'], seminar: NULL, teaching_scheme: { lab: '6 Hours/Week', theory: '1 Hour/Week' }, textbooks: ['Terry Barrett, A new model of problem-based learning., All Ireland Society for higher education (AISHE), ISBN: 978-0-9935254-6-9', 'Mahnazmoallem, Woei Hung, and Nada Dabbagh, Problem-Based Learning., Wiley Publishers, null', 'Robert RobartCapraro, Mary Margaret Capraro, Stem Project-Based Learning and Integrated Science, Technology, Engineering and Mathematics Approach., null, null'], tutorials: NULL };
UPDATE courses:ipcv CONTENT { assessment_scheme: ['MSE', 'ESE', 'Lab and Course Project', 'GD', 'PPT', 'VIVA'], code: 'IT3203', credits: 5, group_discussion: ['Lossy Compression Techniques', 'Lossless Compression Techniques', 'Fourier Transform', 'Set Partitioning in Hierarchical Trees-SPIHT Wavelet Transform', 'Image Understanding-Pattern Recognition Models', 'Object Recognitions', '3-D models and its applications', 'Wavelet Transform', 'Face detection models, etc.'], home_assignment: [{ topics: ['Human Motion Detection', 'Object Detection Model', 'Face Recognition Model', 'Dynamic Texture Synthesis', 'Image and Video Editing', 'Design 3-D models', 'Face Detection Models', 'Develop an application for a vision-based security system...', 'Develop motion estimation/tracking system to recognize object...', 'Develop motion estimation/tracking system to recognize object...'], type: 'Design' }, { topics: ['Image Processing for Smart City', 'Computer Vision for AR AVR'], type: 'Case Study' }, { topics: ['Set Partitioning in Hierarchical Trees-SPIHT Wavelet Transform', 'Image Understanding-Pattern Recognition Models', 'Object Recognitions', '3-D models and its applications', 'Wavelet Transform', 'Face detection models, etc.'], type: 'Research' }, { topics: ['Computer Vision for Data Science', 'Image Processing for Smart Agriculture', 'Image Processing in Medical Field', 'Usage of AI for Computer Vision', 'Job Opportunities in Image Processing and Computer Vision', 'Usage of Image Processing in Computer Vision, Machine Learning, Deep Learning, and AI'], type: 'Blog' }, { topics: ['Steganography and Cryptography', 'Image Processing for Education', 'Dynamic Texture Synthesis', 'Classifications and Recognitions', 'Image & Video Compression', 'Drone-based Surveillance', 'Video Editing', 'Human Motion/Object tracking and detections', 'Image Processing using High-Performance Computing-Computational Complexity/Time Complexity and Execution time', 'Recent Trends in Image and Video Processing'], type: 'Surveys' }], id: courses:ipcv, image: 'courses/ipcv.webp', name: 'Image Processing and Computer Vision', objectives: ['To learn Image Processing fundamentals', 'To study Image preprocessing methods', 'To understand image lossless and lossy compression techniques', 'To introduce the major ideas, methods, and techniques of computer vision and pattern recognition', 'To acquaint with Image segmentation and shape representation', 'To explore object recognition and its application'], outcomes: ['To learn Image Processing fundamentals', 'To study Image preprocessing methods', 'To understand image lossless and lossy compression techniques', 'To introduce the major ideas, methods, and techniques of computer vision and pattern recognition', 'To acquaint with Image segmentation and shape representation', 'To explore object recognition and its application'], practicals: ['Write MATLAB code for various image operations...', 'Pseudo-coloring operation of an image...', 'Study of different file formats...', 'Write C-language code to read and Display BMP image...', 'Write MATLAB code to find various statistical properties...', 'Write MATLAB code to enhance image quality...', 'Write MATLAB code for edge detection...', 'Write C-language code to find out Huffman code...', 'Write MATLAB code to design encoder and decoder...', 'Develop algorithms for image pre-processing...', 'Design algorithms for feature extraction...', 'Design algorithms for segmentation...', 'Design algorithms for object recognition...', 'Design algorithms for motion estimation...', 'Design algorithms for classifiers...', 'Line detection using Hough transform...', 'Apply the second level of DWT decomposition...', 'Write MATLAB code to apply second level of DWT decomposition...'], prerequisites: 'Knowledge of Different types of Signals, Linear Algebra, Probability and Statistics', project: NULL, projects: ['Lossless and Lossy Compression Techniques', 'Pseudo Colour Image Processing Model', 'Image and Video Enhancement models', 'Human Motion Detection', 'Object Detection Model', 'Face Recognition Model', 'Dynamic Texture Synthesis', 'Image and Video Editing', 'Develop an application for a vision-based security system...', 'Develop motion estimation/tracking system to recognize object...'], reference_books: ['Pratt, “Digital Image Processing,” Wiley Publication, 3rd Edition, ISBN 0-471-37407-5.', 'K.R. Castleman, “Digital Image Processing,” 3rd Edition, Prentice Hall: Upper Saddle River, NJ, 3, ISBN 0-13-211467 -4.', 'K. D. Soman and K. I. Ramchandran, “Insight into wavelets - From theory to practice,” 2nd Edition PHI, 2005.', 'D. Forsyth and J. Ponce, “Computer Vision - A modern approach,” Prentice Hall', 'E. Trucco and A. Verri, “Introductory Techniques for 3D Computer Vision,” Publisher: Prentice Hall.', 'D. H. Ballard, C. M. Brown,“Computer Vision”, Prentice-Hall, Englewood Cliffs, 1982.'], relevance: 'Image processing and computer vision are of fundamental importance to any field in which images must be enhanced, manipulated, and analyzed. They play a key role in remote sensing, medical imaging, inspection, surveillance, autonomous vehicle guidance, and more. Students of this course will benefit from the direct visual realization of mathematical abstractions and concepts, and learn how to implement efficient algorithms to perform these tasks.', sections: [{ title: 'Introduction', topics: ['Elements of image processing system', 'Scenes and Images', 'Vector Algebra', 'Human Visual System', 'Color vision color model: RGB, HVS, YUV, CMYK, YCbCr', 'Spatial domain techniques...', 'Image Statistical and Geometrical properties', 'Image Smoothening', 'Image Sharpening', 'Introduction to Image compression and its need...'] }, { title: 'Image Segmentation techniques', topics: ['Image Segmentation: Edge-Based approaches to segmentation', 'Object recognition'] }], seminar: ['Linear Algebra used for Image Processing', 'Image File format-TIFF', 'Color Model', 'Pseudo Colour Image Processing', 'Image Enhancement-Spatial Domain', 'Image Smoothening', 'Image Enhancement-Frequency Domain', 'Image Sharpening', 'Image Segmentation', 'Watershed Transformation', '3-D model', 'Face Detection', 'Object Recognition'], teaching_scheme: { lab: '2 Hours/Week', theory: '2 Hours/Week', tutorial: '1 Hour/Week' }, textbooks: ['Rafael Gonzalez & Richard Woods, “Digital Image Processing,” 3rd Edition, Pearson publications, ISBN 0132345633.', 'S. Jayaraman, S Esakkirajan, & T Veerakumar, “Digital Image Processing,” Tata McGraw Hill Education, ISBN(13) 9780070144798.', 'Anil K. Jain, “Fundamentals of Digital Image Processing,” 5th Edition, PHI publication, ISBN 13: 9780133361650.', 'Richard Szeliski, “Computer Vision: Algorithms and Applications (CVAA)”, Springer, 2010.', 'E. R. Davies, “Computer & Machine Vision,” 4th Edition, Academic Press, 2012.', 'Simon J. D. Prince, “Computer Vision: Models, Learning, and Inference”, Cambridge University Press, 2012.'], tutorials: ['Implement Image preprocessing and Edge detection', 'Image Arithmetic Operations', 'Image quality Enhancement by using various techniques...', 'Image Compression', 'Implement Segmentation methods', 'Implement camera calibration methods', 'Determine depth map from Stereo pair', 'Construct 3D model from defocus image', 'Construct 3D model from Images', 'Implement object detection and tracking from video', 'Face detection and Recognition', 'Object detection from dynamic Background for Surveillance', 'Content-based video retrieval', 'Construct 3D model from a single image'] };
UPDATE courses:mldl CONTENT { assessment_scheme: NULL, code: 'IT3216', credits: 4, group_discussion: ['Supervised Vs Unsupervised', 'Univariate Vs Multivariate analysis', 'Accuracy measuring methods', 'Bias Vs Variance Tradeoff', 'Data Reduction Vs Dimensionality reduction', 'Continuos Vs Discrete variables', 'Feature Extraction Vs Automatic Feature detection', 'RNN Vs LSTM', 'Sentence Classification using Convolutional Neural Networks', 'Dog-breed Classifier', 'Generate TV Scripts', 'Generate Faces', 'Factoid Question Answering', 'Neural Summarization', 'Dialogue Generation with LSTMs'], home_assignment: [{ topics: ['Propensity to Foreclose: Predicting propensity of the customer to foreclose their loans. The objective is to retain the customer for the maximum tenure.', 'Portfolio & Price Prediction for Intra-day trades: Price movement prediction using a masked set of features - This involves predicting short-term to mid-term price movements using a combination of multiple features.', 'Smart Building Energy Management System using Machine Learning', 'Quick analysis of quality of cereals, oilseeds and pulses using ML', 'Video Library Management System using Machine Learning', 'Building a Recurrent Neural Network', 'Character level Dinosaur Name generation', 'Music Generation', 'Operations on Word vectors', 'Neural Machine translation with attention'], type: 'Design' }, { topics: ['Product Recommendation: Given a purchase history for a customer and a large inventory of products, identify those products in which that customer will be interested and likely to purchase. A model of this decision process would allow a program to make recommendations to a customer and motivate product purchases.', 'Medical Diagnosis: Given the symptoms exhibited in a patient and a database of anonymized patient records, predict whether the patient is likely to have an illness. A model of this decision problem could be used by a program to provide decision support to medical professionals.', 'Stock Trading: Given the current and past price movements for a stock, determine whether the stock should be bought, held, or sold. A model of this decision problem could provide decision support to financial analysts.', 'Customer Segmentation: Given the pattern of behavior by a user during a trial period and the past behaviors of all users, identify those users that will convert to the paid version of the product and those that will not. A model of this decision problem would allow a program to trigger customer interventions to persuade the customer to convert early or better engage in the trial.', 'Shape Detection: Given a user hand drawing a shape on a touch screen and a database of known shapes, determine which shape the user was trying to draw. A model of this decision would allow a program to show the platonic version of that shape the user drew to make crisp diagrams.', 'AlexNet', 'VGG', 'Inception', 'ResNet', 'YOLO'], type: 'Case Study' }, { topics: ['Focusing Too Much on Algorithms and Theories.', 'Mastering ALL of ML.', 'Having Algorithms Become Obs mgolete as Soon as Data Grows.', 'Getting Bad Predictions to Come Together With Biases.', 'Making the Wrong Assumptions.', 'Receiving Bad Recommendations.', 'Having Bad Data Convert to Bad Results.', 'Open AI', 'Computer Vision', 'Google Brain', 'Deep Learning and Natural Language Processing', 'Multi-task Learning and Transfer Learning'], type: 'Blogs' }, { topics: ['Concept learning', 'Reinforcement learning', 'Semi-supervised learning', 'Deep learning', 'Transfer learning', 'Deep Neural Networks in Speech and Vision Systems', 'GANs', 'Deep Learning for big data', 'Deep Learning for NLP'], type: 'Surveys' }], id: courses:mldl, image: 'courses/mldl.webp', name: 'Machine Learning and Deep Learning', objectives: ['Understanding Human learning aspects.', 'Acquaintance with primitives in the learning process by a computer.', 'Understanding the nature of problems solved with Machine Learning and Deep Learning.', 'To study different Machine learning algorithms.', 'To study different Deep learning algorithms.', 'To understand the application development process using ML and DL'], outcomes: ['Understanding Human learning aspects.', 'Acquaintance with primitives in the learning process by a computer.', 'Understanding the nature of problems solved with Machine Learning and Deep Learning.', 'To study different Machine learning algorithms.', 'To study different Deep learning algorithms.', 'To understand the application development process using ML and DL'], practicals: NULL, prerequisites: ['Linear Algebra', 'Statistics', 'Calculus', 'Probability Basics'], project: NULL, projects: NULL, reference_books: ["Ethem Alpaydin, 'Introduction to Machine Learning', MIT press, 2004.", "Jacek M. Zurada, 'Introduction to Artificial neural System', JAICO publishing house, 2002.", 'Deep Learning by Ian Goodfellow and Yoshua Bengio and Aaron Courville, Published by An MIT Press book.'], relevance: 'Machine Learning and Deep Learning are disruptive technologies. Powered by data science, machine learning, and Deep Learning makes our lives easier. Understanding the possibilities and recent innovations of ML technology and Deep Learning are important for businesses so that they can plot a course for the most efficient ways of conducting their business. It is also important to stay up to date to maintain competitiveness in the industry.', sections: [{ hours: NULL, title: 'Introduction', topics: ['What is Machine Learning', 'Examples of Machine Learning applications', 'Training versus Testing', 'Cross-validation', 'Mathematical models'] }, { hours: NULL, title: 'Types of Learning', topics: ['Supervised, Unsupervised and Semi-Supervised Learning', 'Dimensionality Reduction'] }, { hours: NULL, title: 'Regression and Generalization', topics: ['Regression: Linear and Logistic Regressions', 'Assessing performance of Regression – Error measures', 'Overfitting and Underfitting', 'Catalysts for Overfitting'] }, { hours: NULL, title: 'Classification', topics: ['Binary and Multiclass Classification', 'Support Vector Machines (SVM), Soft Margin SVM', 'KNN Algorithm, Naïve Bayes Classifier, Decision Tree and Random Forest'] }, { hours: NULL, title: 'Clustering', topics: ['Distance Based Models', 'Distance-based clustering algorithms - K-means and C-means', 'Hierarchical clustering, Association rules mining – Apriori Algorithm, Confidence and Support parameters'] }, { hours: NULL, title: 'Trends in Machine Learning', topics: ['Ensemble Learning', 'Reinforcement Learning'] }, { hours: NULL, title: 'Deep Learning', topics: ['Introduction to deep learning', 'Neural Network Basics, Batch Normalization, The Neuron', 'Expressing Linear Perceptron as Neurons, Feed Forward Neural Networks', 'Linear Neurons and their Limitations, Sigmoid, Tanh and ReLU Neurons', 'Shallow Neural Network and Deep Neural Networks', 'Attacking neural networks with Adversarial Examples and Generative Adversarial Networks, Practical aspects of deep learning', 'Optimization algorithms, Hyperparameters Tuning, Batch Normalization'] }, { hours: NULL, title: 'Deep Learning Strategy', topics: ['A guide to convolution arithmetic for deep learning, Is the deconvolution layer the same as a convolutional layer?', 'Visualizing and Understanding Convolutional Networks, Deep Inside Convolutional Networks: Types of CNN, Visualizing Image Classification Models and Saliency Maps'] }], seminar: ['Validation', 'Naive Bayes Algorithm', 'Machine And Privacy', 'Limitations of ML', 'Ensemble Learning', 'Dimensionality reduction algorithms', 'Comparison of Machine Learning algorithms', 'Feature Extraction In Machine Learning', 'Reinforcement Learning'], teaching_scheme: { lab: '2 Hours/Week', theory: '2 Hours/Week', tutorial: '1 Hour/Week' }, textbooks: ['T. Mitchell, “Machine Learning”, McGraw-Hill, 1997.', 'Anup Kumar Srivastava, Soft Computing, Alpha Science International limited, 2009.', 'Deep Learning with Python by François Chollet, Manning Publications Co, ISBN: 9781617294433.', 'Deep Learning - A Practical Approach by Rajiv Chopra, Khana Publications, ISBN: 9789386173416.'], tutorials: NULL };
UPDATE courses:os CONTENT { assessment_scheme: ['Home Assignment', 'ESE', 'CVV', 'Seminar', 'Group Discussion', 'LAB - Course Assignment and Project Evaluation'], code: 'IT3221', credits: 4, group_discussion: ['Flynn’s taxonomy', 'Role of Operating system', '32 bit Vs 64 bit OS', 'Storage structures and their tradeoffs', 'Disk Scheduling', 'Desktop OS Vs Mobile OS', 'Security Vs Protection in OS', 'I/O processors', 'Linux Vs Windows OS', 'Best OS for smartphones'], home_assignment: [{ topics: ['Report Generation using Shell Script and AWK', 'Library Management System using shell', 'Inter Process Communication in Linux', 'Design any real-time application using job scheduling', 'Design any application using Android'], type: 'Design' }, { topics: ['Distributed Operating System', 'Microsoft Windows 11', 'VMware', 'Linux', 'Android'], type: 'Case Study' }, { topics: ['A survey of Desktop OS', 'Analysis and Comparison of CPU Scheduling Algorithms', 'Device Drivers for various devices', 'Parallel Computing', 'Malware Analysis, Tools and Techniques'], type: 'Surveys' }, { topics: ['Operating System Forensics', 'Open Source OS Vs Commercial OS', 'BIOS', 'Comparative study of different mobile OS', 'Operating Systems for IoT Devices'], type: 'Blog' }], id: courses:os, image: 'courses/os.webp', name: 'Operating System', objectives: ['To understand the basic concepts and functions of Operating System.', 'To gain knowledge of process synchronization and its mechanism.', 'To get familiar with CPU scheduling algorithms.', 'To discuss different deadlock handling mechanisms.', 'To learn memory management techniques and virtual memory.', 'To evaluate various disk scheduling algorithms.'], outcomes: ['To understand the basic concepts and functions of Operating System.', 'To gain knowledge of process synchronization and its mechanism.', 'To get familiar with CPU scheduling algorithms.', 'To discuss different deadlock handling mechanisms.', 'To learn memory management techniques and virtual memory.', 'To evaluate various disk scheduling algorithms.'], practicals: ['Execution of Basic Linux commands', 'Execution of Advanced Linux commands', 'Write shell scripts covering basic arithmetic, control structures, command line arguments, functions, and arrays', 'Write a program demonstrating the use of different system calls', 'Implement multithreading for Matrix Operations using Pthreads', 'Implementation of Classical problems using Threads and Mutex', 'Implementation of Classical problems using Threads and Semaphore', 'Write a program to compute the finish time, turnaround time, and waiting time for various scheduling algorithms', 'Write a program to check whether a given system is in a safe state using Banker’s Deadlock Avoidance algorithm', 'Write a program to calculate the number of page faults for a reference string using various page replacement algorithms'], prerequisites: ['Basics of Computer System', 'Computer Organization', 'Data Structures', 'Any Programming Language'], project: NULL, projects: [{ details: ['CPU/Machine Simulation', 'Supervisor Call through interrupt'], title: 'Design and implementation of a Multiprogramming Operating System: Stage I' }, { details: ['Paging', 'Error Handling', 'Interrupt Generation and Servicing', 'Process Data Structure'], title: 'Design and implementation of a Multiprogramming Operating System: Stage II' }, { details: ['Multiprogramming', 'Virtual Memory', 'Process Scheduling and Synchronization', 'Inter-Process Communication', 'I/O Handling, Spooling, and Buffering'], title: 'Design and implementation of a Multiprogramming Operating System: Stage III' }], reference_books: ['Silberschatz A., Galvin P., Gagne G; “Operating System Principles”; 7th Edition, John Wiley and Sons.', 'Forouzan B. A., Gilberg R. F.; “Unix And Shell Programming”; 1st Edition, Australia Thomson Brooks Cole.', 'Achyut S. Godbole , Atul Kahate; “Operating Systems”; 3rd Edition, McGraw Hill.'], relevance: 'Operating System is a core course in computer science that covers the fundamental concepts of operating systems, including process management, memory management, and file systems. It is essential for understanding how modern computer systems manage resources and provide services to applications.', sections: [{ hours: 2, title: 'Introduction', topics: ['What is OS?', 'Interaction of OS and hardware', 'Goals of OS', 'Basic functions of OS', 'OS Services', 'System Calls', 'Types of System calls', 'Types of OS: Batch, Multiprogramming, Time Sharing, Parallel, Distributed & Real-time OS.'] }, { hours: 6, title: 'Process Management', topics: ['Process Concept', 'Process States: 2, 5, 7 state models', 'Process Description', 'Process Control', 'Thread implementations – User level and Kernel level threads', 'Concurrency: Issues with concurrency', 'Principles of Concurrency', 'Mutual Exclusion: OS/Programming Language Support: Semaphores, Mutex, Classical Process Synchronization problems.', 'Uniprocessor Scheduling: Scheduling Criteria', 'Types of Scheduling: Preemptive, Non-preemptive, Long-term, Medium-term, Short-term', 'Algorithms: FCFS, SJF, RR, Priority'] }, { hours: 2, title: 'Deadlock', topics: ['Principles of deadlock', 'Deadlock Prevention', 'Deadlock Avoidance', 'Deadlock Detection', 'Deadlock Recovery'] }, { hours: 4, title: 'Memory Management', topics: ['Memory Management requirements', 'Memory Partitioning', 'Paging', 'Segmentation', 'Address translation', 'Placement Strategies: First Fit, Best Fit, Next Fit, Worst Fit', 'Virtual Memory', 'VM with Paging', 'VM with Segmentation', 'Page Replacement Policies: FIFO, LRU, Optimal'] }, { hours: 2, title: 'File and I/O Management', topics: ['File Organization', 'File Directories', 'File Sharing', 'Record Blocking', 'I/O Buffering', 'Disk Scheduling: FCFS, SSTF, SCAN, C-SCAN'] }], seminar: ['Different File Systems in Windows and Linux OS', 'Operating System generations', 'OS Structures', 'HDFS', 'Process Vs Threads', 'Virtual Machines', 'Real Time Scheduling', 'Booting Process of different Operating Systems.', 'RAID', 'Protection and Security in Operating System'], teaching_scheme: { lab: '2 Hours/Week', theory: '2 Hours/Week', tutorial: '1 Hour/Week' }, textbooks: ['Stalling William;“Operating Systems”; 6th Edition,Pearson Education;', 'Silberschatz A., Galvin P., Gagne G.;“Operating System Concepts” ; 9th Edition; John Wiley and Sons;', 'Yashavant Kanetkar; “Unix Shell Programming”; 2nd Edition, BPB Publications', 'Sumitabha Das; “Unix Concepts and Applications”; 4th Edition, TMH.', 'D M Dhamdhere; “Systems Programming & Operating Systems”; Tata McGraw Hill Publications, ISBN – 0074635794', 'John J Donovan; “Systems Programming”; Tata Mc-Graw Hill Edition, ISBN-13978-0-07-460482-3'], tutorials: ['Linux commands', 'Evolution of OS', 'Comparison of different OS', 'OS structures', 'Inter Process Communication', 'Symmetric Multiprocessor', 'Thread Scheduling', 'Translation Lookaside buffer', 'Secondary storage management', 'Linux Memory management', 'File System in Windows and Linux'] };
UPDATE courses:sdam CONTENT { assessment_scheme: NULL, code: 'IT3209', credits: 4, group_discussion: ['Traditional Vs Agile', 'Phases of SDLC. Which is more important?', 'UML modeling', 'Analysis Vs Design', 'Design Patterns', 'Design Vs Architecture', 'Architecture style', 'Design Vs Framework', 'Framework Vs Architecture', 'Archetype patterns'], home_assignment: [{ topics: ['Requirement Engg steps', 'Analysis modeling', 'Design modeling', 'Architectural styles', 'Design patterns'], type: 'Design' }, { topics: ['Imaging Software architecture', 'Banking Software architecture', 'ERP Software architecture', 'Online Shopping Software architecture', 'AI Software architecture'], type: 'Case Study' }, { topics: ['Software Engg Do’s and Don’ts', 'Which Process Model?', 'Scrum', 'Devops', 'Data ops'], type: 'Blog' }, { topics: ['Software Design', 'Software Methodologies', 'Software Architectures', 'Design Patterns', 'Architectural Patterns'], type: 'Surveys' }], id: courses:sdam, image: 'courses/sdam.webp', name: 'Software Design and Methodology', objectives: ['Understanding object-oriented analysis and design', 'Learn different software process models and principles and practices', 'Practicing UML to model OO systems', 'Familiarity with current models and standards for design', 'Exposure to organizational issues in software design', 'An ability to analyze and evaluate problems and draw on the theoretical and technical knowledge to develop solutions and systems'], outcomes: ['Understanding object-oriented analysis and design', 'Learn different software process models and principles and practices', 'Practicing UML to model OO systems', 'Familiarity with current models and standards for design', 'Exposure to organizational issues in software design', 'An ability to analyze and evaluate problems and draw on the theoretical and technical knowledge to develop solutions and systems'], practicals: ['To study modeling methodologies and identify their applicability to various categories of projects', 'To understand Requirement Elicitation Techniques and recognize types of requirements while preparing System Requirement Specification', 'To study MDD/MDA and identify the importance of Model Transformation', 'To study types of MOF and metamodel concepts for various diagrams in UML 2.0', 'To identify System Scope, Actors, Use Cases, Use Case structuring for a given problem and perform Use Case narration in template form with normal/alternate flows', 'To identify Entity, Control, Boundary objects and trace object interactions for scenarios from use cases', 'To prepare a state chart diagram for a given object scenario', 'To prepare detailed Activity diagram with notational compliance to UML 2.0 indicating clear use of pins, fork-join, synchronization, data stores', 'To prepare Class diagram for a defined problem with relationships, associations, hierarchies, interfaces, roles, and multiplicity indicators', 'To prepare Component and Deployment diagram for a defined problem'], prerequisites: ['Mastery of programming in a high-level, object-oriented language', 'Familiarity with data structures and algorithms'], project: NULL, projects: ['ERP system', 'Hospital Management', 'Railway Reservation', 'Stock market management', 'Parking automation', 'Library Management', 'Online shopping', 'Content management'], reference_books: ['Hassan Gomaa, Software Modeling and Design- UML, Use Cases, Patterns, and Software Architectures, null, 2011, Cambridge University Press, 978-0-521-76414-8', 'Gardy Booch, James Rambaugh, Ivar Jacobson, The Unified Modeling Language User Guide, Second, 2008, Pearson Education, 0-321-24562', 'Ian Sommerville, Software Engineering, null, null, Addison and Wesley, 0-13-703515-2'], relevance: 'Software Design and Methodology is a core course in computer science that covers the fundamental concepts of software design, development methodologies, and software engineering practices. It is essential for understanding how to develop high-quality software systems that meet user requirements and are maintainable over time.', sections: [{ title: 'SECTION I', topics: ['Overview of Software Engineering', 'Software Modeling', 'Evolution of Software Modeling and Design Methods', 'Requirement Study', 'Study of classes', 'Methods for identification of classes', 'Class Diagram', 'Object diagram', 'Package diagram', 'Component diagram', 'Composite Structure diagram', 'Deployment Diagram', 'Activity diagram', 'Interaction diagram', 'Architecture in the Life Cycle', 'Design Patterns'] }], seminar: ['CMMI', 'Process Models', 'Agile Methodology', 'Modelling using UML', 'Analysis and Design in OO systems', 'Requirement Engineering', 'Principles and Practices of good Software Design', 'Collaborative software development', 'Component diagram', 'Deployment diagram'], teaching_scheme: { Lab: '2 Hours/Week', Theory: '2 Hours/Week' }, textbooks: ['Roger S. Pressman, Software Engineering: A Practitioner’s Approach, 6th, 2005, McGraw Hill International Edition', 'Jim Arlow, Ila Neustadt, UML 2 and the Unified Process – Practical Object-Oriented Analysis and Design, Second, Addison Wesley, 978-0201770605', 'Len Bass, Paul Clements, Rick Kazman, Software Architecture in Practice, Second, Pearson, 978-81-775-8996-2'], tutorials: ['Goals of software engineering', 'Software process models, life cycle models', 'Process improvement, Capability Maturity Model', 'Unified Modeling Language (UML)', 'Design patterns', 'Frameworks, software product lines', 'Software architecture', 'Software measurements and metrics', 'Software estimation methods', 'Static and dynamic analysis', 'Version control, configuration management', 'Software quality, verification and validation, software testing'] };
UPDATE courses:sp CONTENT { assessment_scheme: ['Home Assignment', 'MSE & ESE', 'Quiz', 'Seminar', 'Group Discussion', 'Lab - Course Assignment and Project Evaluation'], code: 'IT3202', credits: 5, group_discussion: ['Windows Vs Linux OS', 'Application Programming Vs System Programming', 'Careers in Application Programming Vs System Programming', 'API Vs ABI', 'Single pass Vs multipass strategy', 'Compiler Vs Interpreter'], home_assignment: [{ topics: ['Design and implementation of 2 Pass Macroprocessor', 'Design and implementation of 2 Pass Assembler', 'Simulation of linker & loader', 'Implement a Lexical Analyzer using LEX for a subset of C', 'Design and implementation of DLL on Linux shared library', 'Design a device driver on Linux system'], type: 'Design' }, { topics: ['Linux OS system architecture', 'Windows OS system architecture', 'Android OS system architecture', 'MAC OS system architecture', 'New trends in linker and loaders'], type: 'Case Study' }, { topics: ['PASS-I Assembler', 'PASS-II Assembler', 'Macro expansion Algorithm', 'Macro Definition Algorithm', 'Machine Language Instruction Generation from Assembly Language Instruction', 'Language Processor Pass', 'Procedure vs Problem Oriented Languages', 'Macro Expansion and Macro definition', 'Linux FileSystem', 'Device Drivers', 'Dynamic Link Library', 'BIOS', 'DOS', 'LINKER', 'LOADER'], type: 'Blog' }], id: courses:sp, image: 'courses/sp.webp', name: 'System Programming', objectives: ['To introduce students to the concepts and principles of system programming and to enable them to understand the duties and scope of a system programmer.', 'To provide students with knowledge about both theoretical and practical aspects of system programming, teaching them the methods and techniques for designing and implementing system-level programs.', 'To train students in developing skills for writing system software with the aid of sophisticated OS services, programming languages, and utility tools.', 'To train students in developing skills for writing a compiler from scratch.', 'To understand encoding-decoding of instruction set for a new machine.'], outcomes: ['To introduce students to the concepts and principles of system programming and to enable them to understand the duties and scope of a system programmer.', 'To provide students with knowledge about both theoretical and practical aspects of system programming, teaching them the methods and techniques for designing and implementing system-level programs.', 'To train students in developing skills for writing system software with the aid of sophisticated OS services, programming languages, and utility tools.', 'To train students in developing skills for writing a compiler from scratch.', 'To understand encoding-decoding of instruction set for a new machine.'], practicals: ['Design and implementation of a symbol Table', 'Simulation of linkers', 'Simulation of loaders', 'Implementation of 2 Pass Assembler', 'Design and implementation of an Editor: Design of a Line or Screen Editor using C Language', 'Implementation of Macroprocessor', 'Write a TSR program in 8086 ALP to implement Real-Time Clock (RTC)', 'Write a TSR program in 8086 ALP to implement Screen Saver', "Write a TSR program in 8086 ALP to handle the 'Divide by zero' interrupt", "Write a TSR program in 'C' that would change the color of the screen every 10 seconds"], prerequisites: 'Data structures, programming in C/C++/Java', project: NULL, projects: ['Design Macroprocessor', 'Design One-pass Assembler', 'Design Two-pass Assembler', 'Design direct linking loader', 'Mouse driver for Linux', 'USB driver for Linux', 'Keyboard driver for Linux', 'Implement a Lexical Analyzer using LEX for a subset of C', 'Design and implementation of DLL on Linux shared library', 'Design a device driver on Linux system'], reference_books: ['Robert Love, “Linux System Programming”, O’Reilly, ISBN 978-0-596-00958-8'], relevance: 'System Programming is a core course in computer science that covers the fundamental concepts of operating systems, system-level programming, and software development tools. It is essential for understanding how modern computer systems are designed and built.', sections: [{ title: 'Introduction', topics: ['Software types, software hierarchy, components of system software, machine structure, interfaces, address space, levels of system software, recent trends in software development.', 'Language processors: Programming languages and language processors, fundamentals of language processing, life cycle of a source program, language processing activities, data structures for language processing: search data structures, allocation data structures.', 'Macroprocessor: Introduction, macro definition and call, macro expansion, nested macro calls, design of macroprocessor, design issues of macroprocessors, two-pass macroprocessors, one-pass macroprocessors.'] }, { title: 'Assembler and Linkers/Loaders', topics: ['Elements of assembly language programming, design of the assembler, assembler design criteria, types of assemblers, two-pass assemblers, one-pass assemblers, assembler algorithms, multi-pass assemblers, variants of assemblers, design of a two-pass assembler, machine-dependent and machine-independent assembler features, allocation, relocation, linker vs. loader.', 'Linkers and Loaders: relocation and linking concepts, static and dynamic linker, subroutine linkages, Linking of Overlay Structured Programs, dynamic linking libraries, MSDOS linker.', 'Loaders: Introduction to Loader, Sequential and Direct Loaders, loader schemes, compile and go loader, general loader scheme, absolute loader, relocating loader, dynamic linking loader.'] }, { title: 'Systems Programming for Linux as Open Source OS', topics: ['Essential concepts of Linux system programming, APIs and ABIs, standards, program segments/sections, the elf format, linking and loading, Linux dynamic libraries (shared objects), dynamic linking, API compatibility, dynamically linked libraries.', 'Advanced system programming concepts: Operating system interfaces, stack smashing, multitasking and paging, address translation, memory protection, comparison with Windows.'] }, { title: 'Compilers, Interpreters, Debuggers, and Encoding/Decoding', topics: ['Introduction to Compiler phases, Introduction to cross-compiler, Features of machine-dependent and independent compilers, types of compilers.', 'Interpreters: Compiler Vs. Interpreter, phases and working. Debuggers: Types of errors, debugging procedures, classification of debuggers, dynamic/interactive Debugger. Lexical Analyzer, Specification and Recognition of Tokens, LEX, Expressing Syntax, Top-Down Parsing, Predictive Parsers. Bottom-Up Parsing, LR Parsers: constructing SLR parsing tables, constructing Canonical LR parsing tables, Constructing LALR parsing tables, using ambiguous grammars, YACC.', 'Encoding and decoding schemes for the X-86 processor.'] }], seminar: ['Macro processor design', 'Assembler design', 'Machine dependent and machine-independent assembler features', 'Linker vs. loader', 'Structured Programs', 'MSDOS linker', 'Dynamic linking loader', 'Dynamic linking libraries', 'Static and dynamic linker with subroutine linkages', 'Linux linking schemes'], teaching_scheme: { lab: '2 Hours/Week', theory: '3 Hours/Week', tutorial: '1 Hour/Week' }, textbooks: ['D M Dhamdhere, “Systems Programming & Operating Systems”, Tata McGraw-Hill Publications, ISBN – 0074635794', 'John J Donovan, “Systems Programming”, ISBN - 0070176035'], tutorials: ['File handling basics', 'Debugging concepts', 'Logic development for implementing assignments', 'Booting process and system files', 'Inbuilt drivers structure of Linux', 'Study of Linkers', 'Study of Loaders', 'Different DLL', 'Paging', 'Segmentation'] };
UPDATE courses:wt CONTENT { assessment_scheme: ['Home Assignment', 'ESE', 'CVV', 'Seminar', 'Group Discussion', 'LAB-Course Assignment and Project Evaluation'], code: 'IT2274', credits: 4, group_discussion: ['Web Services', 'Client Side Frameworks', 'Server Side Frameworks', 'Relational and NoSQL Databases', 'AJAX', 'Client Side Technologies', 'Server Side Technologies', 'Template Engine', 'Progressive Web Apps', 'Markup Languages'], home_assignment: [{ topics: ['Design, Develop and Deploy social web applications using Bootstrap.', 'Design, Develop and Deploy web applications using CMS.', 'Design, Develop and Deploy web application for Electricity Billing System.', 'Design, Develop and Deploy web application for the department.', 'Design, Develop and Deploy web application for Medical Shop.'], type: 'Design' }, { topics: ['Angular JS', 'VueJS', 'Django', 'Flask', 'Wordpress'], type: 'Case Study' }, { topics: ['Recent Web Development Trends', 'Databases for Web Developers', 'Web Services', 'Web Security', 'Web Evolution'], type: 'Blog' }, { topics: ['Comparison of Web Services', 'Frameworks for Web Development', 'Scripting languages for Web Designing', 'Web Server Vs Application Server', 'Current Technologies for Web Development'], type: 'Survey' }], id: courses:wt, image: 'courses/wt.webp', name: 'Web Technology', objectives: ['Learn the fundamental tags of HTML5 and CSS.', 'Obtain knowledge of JavaScript as a client-side technology in web development.', 'Understand the use of jQuery in dynamic website designing.', 'Acquire skills in server-side technologies such as PHP in web development.', 'Build the user interface or front end of complex websites using React.', 'Study building the backend of a web application using NodeJS framework.'], outcomes: ['Learn the fundamental tags of HTML5 and CSS.', 'Obtain knowledge of JavaScript as a client-side technology in web development.', 'Understand the use of jQuery in dynamic website designing.', 'Acquire skills in server-side technologies such as PHP in web development.', 'Build the user interface or front end of complex websites using React.', 'Study building the backend of a web application using NodeJS framework.'], practicals: ['Installation, configuration, and understanding working of XAMPP server for localhost.', 'Design and implement a web page to demonstrate the use of different HTML tags.', 'Design and develop a web page demonstrating the use of CSS tags.', 'Design and develop an HTML form for student registration.', 'Write a code for validation of student registration form using JavaScript.', 'Design and develop a web page to demonstrate various methods of objects in JavaScript like Array, String, Math, Date.', 'Design and develop a web page demonstrating various effects using jQuery.', 'Write a PHP program to create a simple calculator that can accept two numbers and perform operations like add, subtract, multiplication and divide. Validate input values and prompt/alerts for invalid values.', 'Design a dynamic web application using PHP and MYSQL as back-end to perform insert, delete, view and update operation.', 'Design a web page demonstrating file handling operations like open, read, write, append copy, move, delete and rename using NodeJS.', 'Design and implement a simple website using React.'], prerequisites: ['Computer Programming', 'Database Management Systems', 'Computer Network'], project: NULL, projects: ['Student Registration System', 'Tours and Travel System', 'Canteen Food Ordering and Management System.', 'Online Personal Counseling', 'Online Recruitment System', 'Farming Assistant System', 'Hospital Management System', 'Hostel Management System', 'Online Event Management', 'Online Bus/Railway/Airways Booking System', 'Online Banking System'], reference_books: ['Beginning JavaScript, 5th Edition, Wrox Publication', 'Full Stack Javascript Development with MEAN, Adam Bretz, Colin J Ihrig, SPD, ISBN-13: 978-0992461256', 'Full-Stack React Projects, Shama Hoque, 1st Edition, Packt Publishing, ISBN-13 978-1788835534', 'Modern Full-Stack Development, Frank Zammetti, 1st Edition, Apress, ISBN-13 978-1484257371'], relevance: 'Web Technology is a foundational course in computer science that covers the fundamental concepts of web development, including HTML, CSS, JavaScript, PHP, SQL, React, and Express.js. It is essential for understanding how modern web applications are designed and built, and is relevant for students interested in pursuing careers in web development yand full-stack development.', sections: [{ hours: 6, title: 'Introduction to Web Technology', topics: ['Introduction to web technology, Internet and WWW, web site planning and design issues.', 'HTML5: Structure of HTML document', 'commenting, formatting tags, list tags, hyperlink tags, image, table tags, frame tags, form tags', 'CSS, Bootstrap', 'JSON'] }, { hours: 6, title: 'Client-side technologies - JavaScript', topics: ['Overview of JavaScript', 'Data types', 'Control Structures', 'Arrays', 'Functions and Scopes', 'Objects in JS', 'Form validation', 'DOM Introduction', 'DOM levels', 'DOM Objects, their properties and methods', 'Manipulating DOM'] }, { hours: 2, title: 'Client-side technologies - JQuery', topics: ['Introduction', 'Loading JQuery', 'Selecting elements', 'Changing styles', 'Creating elements', 'Appending elements', 'Removing elements', 'Handling events'] }, { hours: 6, title: 'Server-side technologies - PHP', topics: ['Introduction', 'Features', 'PHP syntax', 'Control structures', 'Functions', 'Arrays', 'String', 'Form Handling', 'File Handling', 'Session and Cookies', 'Error Handling', 'MySQL with PHP'] }, { hours: 4, title: 'Client-side technologies - React', topics: ['Introduction', 'Architecture', 'Components', 'JSX', 'Class', 'State', 'Props', 'Events', 'Render function', 'Forms', 'Lists', 'Router', 'Flux'] }, { hours: 4, title: 'Server-side technologies - NodeJS', topics: ['Introduction', 'Installation of Node JS', 'Node JS Modules', 'Node Package Manager (npm)', 'Creating Web server', 'File System', 'Express JS', 'Serving Static Resources', 'Database connectivity'] }], seminar: ['Bootstrap', 'Spring Framework', 'Joomla', 'Sass', 'Java Servlets', 'Object Oriented PHP', 'Angular JS', 'VueJS', 'Django', 'Laravel'], teaching_scheme: { lab: '2 Hours/Week', theory: '2 Hours/Week', tutorial: '1 Hour/Week' }, textbooks: ['Thomas A. Powell, Complete reference HTML, 4th edition, Tata McGraw-Hill Publications', 'Black book, Web Technologies: HTML, JS, PHP, Java, JSP, ASP.NET, XML and AJAX, Dreamtech Press', 'Dave Mercer, Allan Ken, Beginning PHP 5, Dreamtech Publications', 'Martin, M.G., Programming for Beginners: 6 Books in 1 – Swift+PHP+Java+Javascript+Html+CSS: Basic Fundamental Guide for Beginners, Independently published', 'Robin Nixon, Learning PHP, MySQL, JavaScript, CSS and HTML 5, 5th Edition, O’Reilly publication'], tutorials: ['Learn various HTML tags', 'Use of Bootstrap to design a web page', 'Understand the use of JavaScript in form validation', 'Study of Cookies in PHP', 'Study of Session in PHP', 'Study of different ways of working with PHP and MySQL', 'Express Framework', 'Laravel Framework', 'RESTFul API', 'React Hooks', 'Node JS and relational databases', 'Node JS and NoSQL databases'] };

-- ------------------------------
-- TABLE DATA: teachers
-- ------------------------------

UPDATE teachers:aparna_sawant CONTENT { designated_date: NULL, designation: 'Assistant Professor', first_name: 'Aparna', id: teachers:aparna_sawant, join_date: '2006-07-18T00:00:00Z', last_name: 'Sawant', middle_name: 'R.', prefix: NULL, specialization: ['Operating Systems', 'Web Technology'] };
UPDATE teachers:deepali_deshpande CONTENT { designated_date: NULL, designation: 'Assistant Professor', first_name: 'Deepali', id: teachers:deepali_deshpande, join_date: '2007-02-02T00:00:00Z', last_name: 'Deshpande', middle_name: 'R.', prefix: NULL, specialization: ['Image Processing', 'Wireless Sensor Network', 'IoT'] };
UPDATE teachers:deepali_joshi CONTENT { designated_date: NULL, designation: 'Assistant Professor', first_name: 'Deepali', id: teachers:deepali_joshi, join_date: '2008-05-15T00:00:00Z', last_name: 'Joshi', middle_name: 'J.', prefix: NULL, specialization: ['Software Engineering', 'Data Science', 'Data Mining'] };
UPDATE teachers:kavita_sultanpure CONTENT { designated_date: '2023-07-12T00:00:00Z', designation: 'Associate Professor', first_name: 'Kavita', id: teachers:kavita_sultanpure, join_date: '2023-07-12T00:00:00Z', last_name: 'Sultanpure', middle_name: 'A.', prefix: 'Dr.', specialization: ['Cloud Computing'] };
UPDATE teachers:kuldeep_vayadande CONTENT { designated_date: NULL, designation: 'Assistant Professor', first_name: 'Kuldeep', id: teachers:kuldeep_vayadande, join_date: '2021-06-01T00:00:00Z', last_name: 'Vayadande', middle_name: 'B.', prefix: 'Dr.', specialization: ['Automata Theory', 'System Programming'] };
UPDATE teachers:pankaj_kunekar CONTENT { designated_date: NULL, designation: 'Assistant Professor', first_name: 'Pankaj', id: teachers:pankaj_kunekar, join_date: '2021-06-21T00:00:00Z', last_name: 'Kunekar', middle_name: 'R.', prefix: NULL, specialization: ['Machine Learning', 'Cyber Security', 'Cloud Computing'] };
UPDATE teachers:preeti_bailke CONTENT { designated_date: '2019-07-01T00:00:00Z', designation: 'Associate Professor', first_name: 'Preeti', id: teachers:preeti_bailke, join_date: '2003-07-02T00:00:00Z', last_name: 'Bailke', middle_name: 'A.', prefix: 'Dr.', specialization: ['Data Mining ', 'Automata Theory', 'Algorithm Analysis'] };
UPDATE teachers:premanand_ghadekar CONTENT { designated_date: '2019-07-01T00:00:00Z', designation: 'Professor', first_name: 'Premanand', id: teachers:premanand_ghadekar, join_date: '2003-01-21T00:00:00Z', last_name: 'Ghadekar', middle_name: 'P.', prefix: 'Dr.', specialization: ['Image Processing', 'IoT', 'Embedded System'] };
UPDATE teachers:priyadarshan_dhabe CONTENT { designated_date: '2019-07-01T00:00:00Z', designation: 'Professor', first_name: 'Priyadarshan', id: teachers:priyadarshan_dhabe, join_date: '2005-07-15T00:00:00Z', last_name: 'Dhabe', middle_name: 'S.', prefix: 'Dr.', specialization: ['Artificial Intelligence', 'GPU Computing', 'DBMS', 'Fuzzy Neural Network'] };
UPDATE teachers:ranjana_jadhav CONTENT { designated_date: NULL, designation: 'Assistant Professor', first_name: 'Ranjana', id: teachers:ranjana_jadhav, join_date: '2012-07-02T00:00:00Z', last_name: 'Jadhav', middle_name: 'S.', prefix: NULL, specialization: ['Computer Networks and Security', 'NLP'] };
UPDATE teachers:varsha_dange CONTENT { designated_date: NULL, designation: 'Assistant Professor', first_name: 'Varsha', id: teachers:varsha_dange, join_date: '2019-07-01T00:00:00Z', last_name: 'Dange', middle_name: 'R.', prefix: NULL, specialization: ['Data Mining', 'OOP', 'DBMS'] };

-- ------------------------------
-- TABLE DATA: teaches
-- ------------------------------

RELATE teachers:aparna_sawant -> teaches:1n5se9yckybv3b2s7s0k -> courses:os CONTENT { __: true, id: teaches:1n5se9yckybv3b2s7s0k, in: teachers:aparna_sawant, out: courses:os };
RELATE teachers:kuldeep_vayadande -> teaches:5dz0emp4l1r2jzemlpvc -> courses:wt CONTENT { __: true, id: teaches:5dz0emp4l1r2jzemlpvc, in: teachers:kuldeep_vayadande, out: courses:wt };
RELATE teachers:priyadarshan_dhabe -> teaches:7p9g15wp1y1cyvbz0h7j -> courses:wt CONTENT { __: true, id: teaches:7p9g15wp1y1cyvbz0h7j, in: teachers:priyadarshan_dhabe, out: courses:wt };
RELATE teachers:aparna_sawant -> teaches:8a15dbr1sp58tqw1k2tt -> courses:wt CONTENT { __: true, id: teaches:8a15dbr1sp58tqw1k2tt, in: teachers:aparna_sawant, out: courses:wt };
RELATE teachers:pankaj_kunekar -> teaches:8ngf9og6xgcrk7tjoq1u -> courses:csap CONTENT { __: true, id: teaches:8ngf9og6xgcrk7tjoq1u, in: teachers:pankaj_kunekar, out: courses:csap };
RELATE teachers:preeti_bailke -> teaches:b7sdg7l14runsent9v02 -> courses:ads CONTENT { __: true, id: teaches:b7sdg7l14runsent9v02, in: teachers:preeti_bailke, out: courses:ads };
RELATE teachers:deepali_joshi -> teaches:bqi1a1mej9gc0vpyopai -> courses:sdam CONTENT { __: true, id: teaches:bqi1a1mej9gc0vpyopai, in: teachers:deepali_joshi, out: courses:sdam };
RELATE teachers:preeti_bailke -> teaches:i0uashv0k430086ed9e6 -> courses:wt CONTENT { __: true, id: teaches:i0uashv0k430086ed9e6, in: teachers:preeti_bailke, out: courses:wt };
RELATE teachers:kuldeep_vayadande -> teaches:j93tjwdog143glbxffdu -> courses:fcc CONTENT { __: true, id: teaches:j93tjwdog143glbxffdu, in: teachers:kuldeep_vayadande, out: courses:fcc };
RELATE teachers:kavita_sultanpure -> teaches:l4mpelh0x1be0z6nc6fh -> courses:ads CONTENT { __: true, id: teaches:l4mpelh0x1be0z6nc6fh, in: teachers:kavita_sultanpure, out: courses:ads };
RELATE teachers:preeti_bailke -> teaches:o1pbawyryw8veqbik2ow -> courses:at CONTENT { __: true, id: teaches:o1pbawyryw8veqbik2ow, in: teachers:preeti_bailke, out: courses:at };
RELATE teachers:premanand_ghadekar -> teaches:p1dbd9u3l8s8lrbqrjdo -> courses:ipcv CONTENT { __: true, id: teaches:p1dbd9u3l8s8lrbqrjdo, in: teachers:premanand_ghadekar, out: courses:ipcv };
RELATE teachers:kuldeep_vayadande -> teaches:p26v66q77pyj0p1bq6lf -> courses:deam CONTENT { __: true, id: teaches:p26v66q77pyj0p1bq6lf, in: teachers:kuldeep_vayadande, out: courses:deam };
RELATE teachers:kavita_sultanpure -> teaches:q0cdnai6ffytez3a408r -> courses:wt CONTENT { __: true, id: teaches:q0cdnai6ffytez3a408r, in: teachers:kavita_sultanpure, out: courses:wt };
RELATE teachers:pankaj_kunekar -> teaches:ra1yn6eee5offayn9uiy -> courses:cn CONTENT { __: true, id: teaches:ra1yn6eee5offayn9uiy, in: teachers:pankaj_kunekar, out: courses:cn };
RELATE teachers:premanand_ghadekar -> teaches:usax5id8dlf4v7t15wmj -> courses:dt CONTENT { __: true, id: teaches:usax5id8dlf4v7t15wmj, in: teachers:premanand_ghadekar, out: courses:dt };
RELATE teachers:priyadarshan_dhabe -> teaches:v8ohrcjfuyypzyqqiw6w -> courses:dt CONTENT { __: true, id: teaches:v8ohrcjfuyypzyqqiw6w, in: teachers:priyadarshan_dhabe, out: courses:dt };
RELATE teachers:priyadarshan_dhabe -> teaches:vqvkybt45poscb11ms10 -> courses:ai CONTENT { __: true, id: teaches:vqvkybt45poscb11ms10, in: teachers:priyadarshan_dhabe, out: courses:ai };
RELATE teachers:ranjana_jadhav -> teaches:y3dd1taouzday9269b6x -> courses:cn CONTENT { __: true, id: teaches:y3dd1taouzday9269b6x, in: teachers:ranjana_jadhav, out: courses:cn };
RELATE teachers:deepali_deshpande -> teaches:y572rkv2licfzusk3sez -> courses:deam CONTENT { __: true, id: teaches:y572rkv2licfzusk3sez, in: teachers:deepali_deshpande, out: courses:deam };
RELATE teachers:aparna_sawant -> teaches:y6vkqoqub4l985nwb323 -> courses:ads CONTENT { __: true, id: teaches:y6vkqoqub4l985nwb323, in: teachers:aparna_sawant, out: courses:ads };
RELATE teachers:pankaj_kunekar -> teaches:ztprqo1plxbvce33gg3n -> courses:ads CONTENT { __: true, id: teaches:ztprqo1plxbvce33gg3n, in: teachers:pankaj_kunekar, out: courses:ads };

-- ------------------------------
-- TRANSACTION
-- ------------------------------

COMMIT TRANSACTION;

